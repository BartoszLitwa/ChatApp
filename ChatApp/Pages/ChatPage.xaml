<local:BasePage x:TypeArguments="local:ChatMessageListViewModel" x:Class="ChatApp.ChatPage"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:local="clr-namespace:ChatApp"
                xmlns:core="clr-namespace:ChatApp.Core;assembly=ChatApp.Core"
                mc:Ignorable="d" 
                x:Name="Page"
                d:DesignHeight="700" d:DesignWidth="700"
                DataContext="{x:Static local:ChatMessageListDesignModel.Instance}">

    <Grid>

        <Grid.RowDefinitions>
            <!-- Title Bar -->
            <RowDefinition Height="Auto" />
            <!-- Chat messages -->
            <RowDefinition Height="*" />
            <!-- Message Send text box -->
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <!-- Popup Overlay -->
        <Border Background="Transparent"
                Grid.RowSpan="2"
                Panel.ZIndex="1"
                Visibility="{Binding AnyPopupVisible, Converter={local:BooleanToVisibilityConverter}, ConverterParameter=True}">

            <Border.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{Binding PopupClickAwayCommand}" />
            </Border.InputBindings>
            
        </Border>

        <!-- Title Bar -->
        <Grid Height="55">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <!-- title Text -->
            <StackPanel Grid.Column="0"
                       Grid.ColumnSpan="2"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Orientation="Horizontal">

                <!-- Profile Picture -->
                <Border VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Margin="7"
                    CornerRadius="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                    Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"
                    Width="35"
                    Background="{Binding SenderProfilePictureRGB, Converter={local:StringRGBToBrushConverter}}"
                    BorderBrush="{StaticResource ForegroundLightBrush}"
                    BorderThickness="1">

                    <TextBlock Text="{Binding SenderInitials}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="{StaticResource ForegroundLightBrush}"
                           FontFamily="{StaticResource LatoRegular}"/>

                </Border>

                <TextBlock Text="{Binding SenderName}"
                           Foreground="{StaticResource ForegroundLightBrush}"
                           FontSize="{StaticResource FontSizeXXLarge}"
                           FontFamily="{StaticResource LatoRegular}"
                           VerticalAlignment="Center"/>
                
            </StackPanel>

            <!-- Buttons -->
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <!-- Search Button -->
                <Button Style="{StaticResource IconGrowButton}"
                        Content="{StaticResource FontAwesomeSearchIcon}"
                        Command="{Binding OpenSearchCommand}"/>
                
                <Button Style="{StaticResource IconGrowButton}"
                        Content="{StaticResource FontAwesomeEllipsisVerticalIcon}" />
            </StackPanel>

            <!-- Search Overlay -->
            <Grid Grid.ColumnSpan="2"
                  local:AnimateSlideInFromRightMarginProperty.Value="{Binding SearchIsOpen}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Close Button -->
                <Button Style="{StaticResource IconGrowButton}"
                        Content="{StaticResource FontAwesomeCancelIcon}"
                        Command="{Binding CloseSearchCommand}"
                        Foreground="{StaticResource WordOrangeBrush}"/>

                <!-- Search box -->
                <TextBox x:Name="SearchText"
                         local:FocusProperty.Value="{Binding SearchIsOpen}"
                         Margin="0 5 5 5"
                         VerticalAlignment="Center"
                         Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                         Grid.Column="2"
                         Tag="Search text..."
                         FontSize="{StaticResource FontSizeRegular}">

                    <TextBox.InputBindings>
                        <!-- Clear text on ESC -->
                        <KeyBinding Command="{Binding ClearSearchCommand}" Key="Esc" />
                        <!-- Search text on Enter -->
                        <KeyBinding Command="{Binding SearchCommand}" Key="Return" />
                    </TextBox.InputBindings>
                    
                </TextBox>

            </Grid>

        </Grid>
        
        <!-- Chat messages -->
        <local:ChatMessageListControl x:Name="ChatMessageList"
                                      Grid.Row="1"/>

        <!-- Attachment Menu Popup-->
        <Border local:AnimateSlideInFromBottomProperty.Value="{Binding AttachmentMenuVisible}"
                Grid.Row="1"
                Panel.ZIndex="2"
                VerticalAlignment="Bottom"
                HorizontalAlignment="Left">

            <local:BubbleContent DataContext="{Binding AttachmentMenu}"/>

        </Border>

        <!-- Message Send text box -->
        <Grid Grid.Row="2"
              Panel.ZIndex="3"
              MinHeight="50"
              MaxHeight="115"
              Background="{StaticResource ForegroundLightBrush}">

            <Grid.ColumnDefinitions>
                <!-- Attach Button -->
                <ColumnDefinition Width="Auto" />
                <!-- Text Entry Button -->
                <ColumnDefinition Width="*" />
                <!-- Additional Buttons-->
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Attach Button -->
            <Button Grid.Column="0"
                    Margin="0 8"
                    Style="{StaticResource IconGrowButton}"
                    Height="{Binding MinHeight, RelativeSource={RelativeSource AncestorType=Grid}}"
                    Content="{StaticResource FontAwesomePaperClipIcon}"
                    Foreground="{StaticResource ForegroundVeryDarkBrush}"
                    Command="{Binding AttachmentButtonCommand}"
                    VerticalAlignment="Top"/>

            <!-- Text Entry Button -->
            <TextBox x:Name="MessageText"
                     Grid.Column="1"
                     Text="{Binding PednigMessageText, UpdateSourceTrigger=PropertyChanged}"
                     PreviewKeyDown="MessageText_PreviewKeyDown"
                     local:IsFocusedProperty.Value="True"
                     VerticalAlignment="Center"
                     Tag="Write a message..."
                     FontSize="{StaticResource FontSizeRegular}"
                     BorderThickness="0"
                     AcceptsReturn="True"
                     AcceptsTab="True"
                     VerticalScrollBarVisibility="Auto"/>

            <!-- Additional Buttons-->
            <StackPanel Grid.Column="2" 
                        VerticalAlignment="Top"
                        Orientation="Horizontal"
                        Margin="0 0 8 0">
                
                <!-- Emoji Button -->
                <Button Style="{StaticResource IconGrowButton}"
                        Height="{Binding MinHeight, RelativeSource={RelativeSource AncestorType=Grid}}"
                        Content="{StaticResource FontAwesomeSmileEmojiIcon}"
                        Foreground="Orange"/>
                
                <!-- Send Button -->
                <Button Content="Send" 
                        Command="{Binding SendCommand}"
                        Padding="8"
                        Background="{StaticResource WordGreenBrush}"
                        FontSize="{StaticResource FontSizeRegular}"
                        Focusable="False"/>

            </StackPanel>

        </Grid>

    </Grid>
</local:BasePage>
